#pragma once
#include "cuda_complex_math.cuh"
#include "cuda_device_variables.cuh"
#include "kernel_coefficients_dormand_prince.cuh"

/**
 * Summation of the k2 array
 *
 */
__global__ void rungeFuncSumToK2( complex_number* __restrict__ out_Psi_Plus, complex_number* __restrict__ out_Psi_Minus, complex_number* __restrict__ out_n_Plus, complex_number* __restrict__ out_n_Minus, complex_number* __restrict__ in_Psi_Plus, complex_number* __restrict__ in_Psi_Minus, complex_number* __restrict__ in_n_Plus, complex_number* __restrict__ in_n_Minus, complex_number* __restrict__ k1_Psi_Plus, complex_number* __restrict__ k1_Psi_Minus, complex_number* __restrict__ k1_n_Plus, complex_number* __restrict__ k1_n_Minus );
/*
 * Summation of the k3 array
 */
__global__ void rungeFuncSumToK3( complex_number* __restrict__ out_Psi_Plus, complex_number* __restrict__ out_Psi_Minus, complex_number* __restrict__ out_n_Plus, complex_number* __restrict__ out_n_Minus, complex_number* __restrict__ in_Psi_Plus, complex_number* __restrict__ in_Psi_Minus, complex_number* __restrict__ in_n_Plus, complex_number* __restrict__ in_n_Minus, complex_number* __restrict__ k1_Psi_Plus, complex_number* __restrict__ k1_Psi_Minus, complex_number* __restrict__ k1_n_Plus, complex_number* __restrict__ k1_n_Minus, complex_number* __restrict__ k2_Psi_Plus, complex_number* __restrict__ k2_Psi_Minus, complex_number* __restrict__ k2_n_Plus, complex_number* __restrict__ k2_n_Minus );
/*
 * Summation of the k4 array
 */
__global__ void rungeFuncSumToK4( complex_number* __restrict__ out_Psi_Plus, complex_number* __restrict__ out_Psi_Minus, complex_number* __restrict__ out_n_Plus, complex_number* __restrict__ out_n_Minus, complex_number* __restrict__ in_Psi_Plus, complex_number* __restrict__ in_Psi_Minus, complex_number* __restrict__ in_n_Plus, complex_number* __restrict__ in_n_Minus, complex_number* __restrict__ k1_Psi_Plus, complex_number* __restrict__ k1_Psi_Minus, complex_number* __restrict__ k1_n_Plus, complex_number* __restrict__ k1_n_Minus, complex_number* __restrict__ k2_Psi_Plus, complex_number* __restrict__ k2_Psi_Minus, complex_number* __restrict__ k2_n_Plus, complex_number* __restrict__ k2_n_Minus, complex_number* __restrict__ k3_Psi_Plus, complex_number* __restrict__ k3_Psi_Minus, complex_number* __restrict__ k3_n_Plus, complex_number* __restrict__ k3_n_Minus );
/*
 * Summation of the k5 array
 */
__global__ void rungeFuncSumToK5( complex_number* __restrict__ out_Psi_Plus, complex_number* __restrict__ out_Psi_Minus, complex_number* __restrict__ out_n_Plus, complex_number* __restrict__ out_n_Minus, complex_number* __restrict__ in_Psi_Plus, complex_number* __restrict__ in_Psi_Minus, complex_number* __restrict__ in_n_Plus, complex_number* __restrict__ in_n_Minus, complex_number* __restrict__ k1_Psi_Plus, complex_number* __restrict__ k1_Psi_Minus, complex_number* __restrict__ k1_n_Plus, complex_number* __restrict__ k1_n_Minus, complex_number* __restrict__ k2_Psi_Plus, complex_number* __restrict__ k2_Psi_Minus, complex_number* __restrict__ k2_n_Plus, complex_number* __restrict__ k2_n_Minus, complex_number* __restrict__ k3_Psi_Plus, complex_number* __restrict__ k3_Psi_Minus, complex_number* __restrict__ k3_n_Plus, complex_number* __restrict__ k3_n_Minus, complex_number* __restrict__ k4_Psi_Plus, complex_number* __restrict__ k4_Psi_Minus, complex_number* __restrict__ k4_n_Plus, complex_number* __restrict__ k4_n_Minus );
/*
 * Summation of the k6 array
 */
__global__ void rungeFuncSumToK6( complex_number* __restrict__ out_Psi_Plus, complex_number* __restrict__ out_Psi_Minus, complex_number* __restrict__ out_n_Plus, complex_number* __restrict__ out_n_Minus, complex_number* __restrict__ in_Psi_Plus, complex_number* __restrict__ in_Psi_Minus, complex_number* __restrict__ in_n_Plus, complex_number* __restrict__ in_n_Minus, complex_number* __restrict__ k1_Psi_Plus, complex_number* __restrict__ k1_Psi_Minus, complex_number* __restrict__ k1_n_Plus, complex_number* __restrict__ k1_n_Minus, complex_number* __restrict__ k2_Psi_Plus, complex_number* __restrict__ k2_Psi_Minus, complex_number* __restrict__ k2_n_Plus, complex_number* __restrict__ k2_n_Minus, complex_number* __restrict__ k3_Psi_Plus, complex_number* __restrict__ k3_Psi_Minus, complex_number* __restrict__ k3_n_Plus, complex_number* __restrict__ k3_n_Minus, complex_number* __restrict__ k4_Psi_Plus, complex_number* __restrict__ k4_Psi_Minus, complex_number* __restrict__ k4_n_Plus, complex_number* __restrict__ k4_n_Minus, complex_number* __restrict__ k5_Psi_Plus, complex_number* __restrict__ k5_Psi_Minus, complex_number* __restrict__ k5_n_Plus, complex_number* __restrict__ k5_n_Minus );

/**
 * Final Sum for the next iteration
 */
__global__ void rungeFuncSumToFinal( complex_number* out_Psi_Plus, complex_number* out_Psi_Minus, complex_number* out_n_Plus, complex_number* out_n_Minus, complex_number* in_Psi_Plus, complex_number* in_Psi_Minus, complex_number* in_n_Plus, complex_number* in_n_Minus, complex_number* __restrict__ k1_Psi_Plus, complex_number* __restrict__ k1_Psi_Minus, complex_number* __restrict__ k1_n_Plus, complex_number* __restrict__ k1_n_Minus, complex_number* __restrict__ k3_Psi_Plus, complex_number* __restrict__ k3_Psi_Minus, complex_number* __restrict__ k3_n_Plus, complex_number* __restrict__ k3_n_Minus, complex_number* __restrict__ k4_Psi_Plus, complex_number* __restrict__ k4_Psi_Minus, complex_number* __restrict__ k4_n_Plus, complex_number* __restrict__ k4_n_Minus, complex_number* __restrict__ k5_Psi_Plus, complex_number* __restrict__ k5_Psi_Minus, complex_number* __restrict__ k5_n_Plus, complex_number* __restrict__ k5_n_Minus, complex_number* __restrict__ k6_Psi_Plus, complex_number* __restrict__ k6_Psi_Minus, complex_number* __restrict__ k6_n_Plus, complex_number* __restrict__ k6_n_Minus );
/**
 * Calculates the error sum for the RK45 Method
 * The error is calculated as the sum of the absolute values of the k arrays and is not normalized by either the sum of Psi nor the number of cells
 * @param out The output array
 */
__global__ void rungeFuncFinalError( real_number* out, complex_number* in_Psi_Plus, complex_number* in_Psi_Minus, complex_number* in_n_Plus, complex_number* in_n_Minus, complex_number* __restrict__ k1_Psi_Plus, complex_number* __restrict__ k1_Psi_Minus, complex_number* __restrict__ k1_n_Plus, complex_number* __restrict__ k1_n_Minus, complex_number* __restrict__ k3_Psi_Plus, complex_number* __restrict__ k3_Psi_Minus, complex_number* __restrict__ k3_n_Plus, complex_number* __restrict__ k3_n_Minus, complex_number* __restrict__ k4_Psi_Plus, complex_number* __restrict__ k4_Psi_Minus, complex_number* __restrict__ k4_n_Plus, complex_number* __restrict__ k4_n_Minus, complex_number* __restrict__ k5_Psi_Plus, complex_number* __restrict__ k5_Psi_Minus, complex_number* __restrict__ k5_n_Plus, complex_number* __restrict__ k5_n_Minus, complex_number* __restrict__ k6_Psi_Plus, complex_number* __restrict__ k6_Psi_Minus, complex_number* __restrict__ k6_n_Plus, complex_number* __restrict__ k6_n_Minus, complex_number* __restrict__ k7_Psi_Plus, complex_number* __restrict__ k7_Psi_Minus, complex_number* __restrict__ k7_n_Plus, complex_number* __restrict__ k7_n_Minus );

/**
 * Summation of the k2,k3 and k4 array
 * This function is used for the RK4
 */
__global__ void rungeFuncSum( real_number s_dt, complex_number* __restrict__ out_Psi_Plus, complex_number* __restrict__ out_Psi_Minus, complex_number* __restrict__ out_n_Plus, complex_number* __restrict__ out_n_Minus, complex_number* __restrict__ in_Psi_Plus, complex_number* __restrict__ in_Psi_Minus, complex_number* __restrict__ in_n_Plus, complex_number* __restrict__ in_n_Minus, complex_number* __restrict__ k_Psi_Plus, complex_number* __restrict__ k_Psi_Minus, complex_number* __restrict__ k_n_Plus, complex_number* __restrict__ k_n_Minus );
__global__ void rungeFuncSumToFinalFixed( complex_number* out_Psi_Plus, complex_number* out_Psi_Minus, complex_number* out_n_Plus, complex_number* out_n_Minus, complex_number* in_Psi_Plus, complex_number* in_Psi_Minus, complex_number* in_n_Plus, complex_number* in_n_Minus, complex_number* __restrict__ k1_Psi_Plus, complex_number* __restrict__ k1_Psi_Minus, complex_number* __restrict__ k1_n_Plus, complex_number* __restrict__ k1_n_Minus, complex_number* __restrict__ k2_Psi_Plus, complex_number* __restrict__ k2_Psi_Minus, complex_number* __restrict__ k2_n_Plus, complex_number* __restrict__ k2_n_Minus, complex_number* __restrict__ k3_Psi_Plus, complex_number* __restrict__ k3_Psi_Minus, complex_number* __restrict__ k3_n_Plus, complex_number* __restrict__ k3_n_Minus, complex_number* __restrict__ k4_Psi_Plus, complex_number* __restrict__ k4_Psi_Minus, complex_number* __restrict__ k4_n_Plus, complex_number* __restrict__ k4_n_Minus );